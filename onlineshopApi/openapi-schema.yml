openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/profile:
    get:
      operationId: listProfiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
  /api/v1/profile/{id}:
    get:
      operationId: retrieveProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
    put:
      operationId: updateProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
  /api/v1/address/create:
    get:
      operationId: listAddress
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - api
    post:
      operationId: createAddress
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      tags:
      - api
  /api/v1/categories:
    get:
      operationId: listCategorys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/categories/{id}:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    put:
      operationId: updateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/categories/{slug}:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: slug
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/categories/{id}/products:
    get:
      operationId: listProducts
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product_Category_'
          description: ''
      tags:
      - api
  /api/v1/categorylevel/{id}:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryLevel'
          description: ''
      tags:
      - api
  /api/v1/products:
    get:
      operationId: listProducts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
  /api/v1/products/{id}:
    get:
      operationId: retrieveProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    put:
      operationId: updateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/latestproducts:
    get:
      operationId: listProducts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
  /api/v1/carts:
    get:
      operationId: listCarts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
          description: ''
      tags:
      - api
  /api/v1/cartitem:
    get:
      operationId: listCartItems
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
          description: ''
      tags:
      - api
  /api/v1/cartitem/{id}/:
    get:
      operationId: retrieveCartItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this cart item.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
      tags:
      - api
    put:
      operationId: updateCartItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this cart item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCartItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this cart item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCartItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this cart item.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/orders:
    get:
      operationId: listOrders
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    post:
      operationId: createOrder
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
  /api/v1/ordercreate/:
    get:
      operationId: listOrders
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    post:
      operationId: createOrder
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
  /api/v1/orders/{id}:
    get:
      operationId: retrieveOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/orderitem:
    get:
      operationId: listOrderItems
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
          description: ''
      tags:
      - api
    post:
      operationId: createOrderItem
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
      tags:
      - api
  /api/v1/orderitemstatis/:
    get:
      operationId: listOrderItems
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
          description: ''
      tags:
      - api
  /api/v1/registration/:
    post:
      operationId: createBaseUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/login:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/v1/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
components:
  schemas:
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        name:
          type: string
          nullable: true
          maxLength: 60
        photo:
          type: string
          format: binary
          nullable: true
        phone:
          type: string
          readOnly: true
          nullable: true
          maxLength: 13
        description:
          type: string
          nullable: true
        gender:
          enum:
          - Female
          - Male
          type: string
          nullable: true
        birth_date:
          type: string
          format: date
          nullable: true
      required:
      - user
    Address:
      type: object
      properties:
        profile:
          type: integer
        region:
          enum:
          - Buxoro
          - Toshkent vil
          - Samarqand
          - Andijon
          - Xorazm
          - Namangan
          - Toshkent
          - Navoi
          - Surxondaryo
          - Jizzax
          - Fargona
          - Qashqadaryo
          type: string
        city:
          type: string
          nullable: true
          maxLength: 200
        district:
          type: string
          nullable: true
          maxLength: 300
        state:
          type: string
          nullable: true
          maxLength: 200
        address:
          type: string
          maxLength: 200
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - profile
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        parent:
          type: integer
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 150
        slug:
          type: string
          maxLength: 800
          pattern: ^[-a-zA-Z0-9_]+$
        date_created:
          type: string
          format: date-time
          readOnly: true
        activate:
          type: boolean
      required:
      - slug
      - activate
    Product_Category_:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            parent:
              type: integer
              nullable: true
            description:
              type: string
              nullable: true
              maxLength: 150
            slug:
              type: string
              maxLength: 800
              pattern: ^[-a-zA-Z0-9_]+$
            date_created:
              type: string
              format: date-time
              readOnly: true
            activate:
              type: boolean
          required:
          - slug
          - activate
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 100
        price:
          type: string
          format: decimal
          multipleOf: 0.0001
          maximum: 100000000000
          minimum: -100000000000
        description:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        products:
          type: array
          items:
            type: integer
      required:
      - price
      - description
      - products
    CategoryLevel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        parent:
          type: integer
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 50
        slug:
          type: string
          maxLength: 800
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - slug
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: integer
        title:
          type: string
          nullable: true
          maxLength: 100
        price:
          type: string
          format: decimal
          multipleOf: 0.0001
          maximum: 100000000000
          minimum: -100000000000
        photo:
          type: string
          format: binary
          nullable: true
        description:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - price
      - description
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile:
          type: integer
        completed:
          type: boolean
      required:
      - profile
    CartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cart:
          type: integer
          nullable: true
        product:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            category:
              type: integer
            title:
              type: string
              nullable: true
              maxLength: 100
            price:
              type: string
              format: decimal
              multipleOf: 0.0001
              maximum: 100000000000
              minimum: -100000000000
            photo:
              type: string
              format: binary
              nullable: true
            description:
              type: string
            date_created:
              type: string
              format: date-time
              readOnly: true
          required:
          - category
          - price
          - description
        quantity:
          type: integer
          nullable: true
        created_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - product
    Order:
      type: object
      properties:
        user:
          type: integer
        ordered:
          type: boolean
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        barcode:
          type: string
          nullable: true
          maxLength: 20
        region:
          type: string
          maxLength: 100
        city:
          type: string
          nullable: true
          maxLength: 200
        district:
          type: string
          nullable: true
          maxLength: 300
        state:
          type: string
          nullable: true
          maxLength: 200
        target:
          type: string
          maxLength: 200
        cart_total:
          type: string
          readOnly: true
        cart_items:
          type: string
          readOnly: true
      required:
      - user
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        product:
          type: integer
        quantity:
          type: integer
          nullable: true
        date_added:
          type: string
          format: date
          readOnly: true
      required:
      - order
      - product
    User:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - password
      - username
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
